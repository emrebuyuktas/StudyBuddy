@using StudyBuddy.WebUi.Models
@inject Blazored.LocalStorage.ILocalStorageService localStorage

@if (taglist == null)
{
    <p>
        <em>
            @loadingMessage
        </em>
    </p>
}
else
{
    foreach (var item in taglist)
    {
        
        <div class="col-sm-10">
            <div class="form-check">
                <input   class="form-check-input" type="checkbox" value="@item.Name" id="@item.Id" @onchange="eventArgs => { CheckboxClicked( item.Name,item.Id, eventArgs.Value); }">
                <label class="form-check-label" for="@item.Id">
                    @item.Name
                </label>
            </div>
        </div>
    }
    
   
}





@code {

    [Parameter]
    public string Value { get; set; }



    [Inject]
    HttpClient Client { get; set; }

    List<TagDto> taglist;


    String loadingMessage = "Loading...";

    protected override async Task OnInitializedAsync()
    {
        var res = (await Client.GetServiceResponseAsync<List<TagDto>>("https://localhost:7042/api/Tag/all", true));
        if (res.StatusCode != 200)
        {
            Console.WriteLine(res.Error.Errors.First());
        }
        else
        {
            taglist = res.Data;
        }
    }
    
    public List<TagDto> CheckBox { get; set; } = new List<TagDto>();
    void CheckboxClicked(string name,int id, object checkedValue)
    {
        if ((bool)checkedValue)
        {
            if (!CheckBox.Any(x=>x.Id==id))
            {
                CheckBox.Add(new TagDto
                {
                    Id = id,
                    Name = name
                });
                foreach (var item in CheckBox)
                {
                    Console.WriteLine(item.Name);
                }
            }
        }
        else
        {
            if (CheckBox.Any(x=>x.Id==id))
            {
                CheckBox.RemoveAll(x=>x.Id==id);
            }
        }
    }
    


}

  